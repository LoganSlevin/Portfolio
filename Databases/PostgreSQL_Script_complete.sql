-- ALL STAFF ARE STORED INTO ONE TABLE AND CAN BE REFERENCED AS EITHER MODULE LEADER OR TUTOR.
CREATE TABLE staff_members (
STAFF_NAME VARCHAR(30) PRIMARY KEY,
EMAIL VARCHAR(70),
PHONENO SMALLINT CHECK (PHONENO > 0), -- CHECK VALUE HERE ENSURES THAT THE PHONE NUMBER ENTERED IS MORE THAN 0
OFFICENO VARCHAR(25),
OFFICEHOURS VARCHAR(50),
);
-- INSERTING THE STAFF MEMBERS INTO THE TABLE 
INSERT INTO staff_members VALUES ('Leonardo Stella','l.stella@derby.ac.uk','1410','MS308','THU 13-17');
INSERT INTO staff_members VALUES ('Chris Windmill','c.windmill@derby.ac.uk','9216','MS310','FRI 12-16');
INSERT INTO staff_members VALUES ('Yongjun Zheng','y.zheng@derby.ac.uk','9989','MS310','TUE 13-17');
INSERT INTO staff_members VALUES ('Wayne Rippin','w.rippin@derby.ac.uk','8989','MS308','THU 9-12');
--THESE ARE THE TUTORS 
INSERT INTO staff_members (STAFF_NAME,EMAIL,PHONENO) VALUES ('Nige','n.jones@derby.ac.uk','1234');
INSERT INTO staff_members (STAFF_NAME,PHONENO) VALUES ('Farhan','9851');
INSERT INTO staff_members (STAFF_NAME,PHONENO) VALUES ('Jack','3577');
INSERT INTO staff_members (STAFF_NAME,EMAIL) VALUES ('Andy','a.zhang@derby.ac.uk');
--THIS STUDENT TABLE HOLDS THE STUDENTS ID AND PASSWORD
CREATE TABLE students (
STUDENTID CHAR(20) NOT NULL PRIMARY KEY,
PASSWORD VARCHAR(15) NOT NULL
);
--INSERTING THE 2 STUDENTS INTO THE STUDENT TABLE FROM THE TEST DATA.
INSERT INTO students VALUES ('328145291','zogbogfrog');-- FIRST ENTRY IS THE STUDENT ID AND THE SECOND IS THE PASSWORD
INSERT INTO students VALUES ('578274289','superman');

-- MAIN TABLE WHICH CONTAINS MOST OF THE VALUES THAT THE USER NEEDS. 
CREATE TABLE modulestt (
MODULEID VARCHAR(20) NOT NULL PRIMARY KEY, -- MODULE ID IS PRIMARY KEY AND UNIQUE 
DESCRIPTION VARCHAR(80) NOT NULL,
LECTURE_DATE VARCHAR(50) NOT NULL,
ROOM VARCHAR(10) NOT NULL,
MODULE_LEADER VARCHAR(30) NOT NULL REFERENCES staff_members (STAFF_NAME),
TUTOR1 VARCHAR(30) REFERENCES staff_members (STAFF_NAME),
TUTOR2 VARCHAR(30) REFERENCES staff_members (STAFF_NAME),
ASSESSMENT1DESC VARCHAR(50),
ASS1DEADLINE VARCHAR(50),
ASS2DESC VARCHAR(50),
ASS2DEADLINE VARCHAR(50),
ASS3DESC VARCHAR(50),
ASS3DEADLINE VARCHAR(50)
);
-- Inserting all of the modules into the module table which includes the module leader and any tutors.
INSERT INTO modulestt (MODULEID,DESCRIPTION,LECTURE_DATE,ROOM,MODULE_LEADER,TUTOR1,TUTOR2,ASSESSMENT1DESC,ASS1DEADLINE,ASS2DESC,ASS2DEADLINE,ASS3DESC,ASS3DEADLINE) VALUES ('5CC507','DATABASES','FRI 12-13','MS125','Leonardo Stella','Nige','Farhan','Milestone 1','Oct6 17.00','Milestone 2','Nov 6 17.00','Project Hand-in','Dec12 23.59'); 
INSERT INTO modulestt (MODULEID,DESCRIPTION,LECTURE_DATE,ROOM,MODULE_LEADER,ASSESSMENT1DESC,ASS1DEADLINE) VALUES ('6CC529','GAME BEHAVIOUR','MON 9-11','BMG10','Leonardo Stella','Performance Review','Dec12 23.59'); 
INSERT INTO modulestt (MODULEID,DESCRIPTION,LECTURE_DATE,ROOM,MODULE_LEADER,TUTOR1,ASSESSMENT1DESC,ASS1DEADLINE) VALUES ('5CC516','SOFTWARE ENGINEERING','THU 12-13','MS316','Chris Windmill','Jack','Portfolio Hand-in','Dec12 23.59');
INSERT INTO modulestt (MODULEID,DESCRIPTION,LECTURE_DATE,ROOM,MODULE_LEADER,ASSESSMENT1DESC,ASS1DEADLINE) VALUES ('4CC510','PROGRAMMING I','MON 16-17','OL2','Yongjun Zheng','Portfolio Hand-in','Dec12 17.00');
INSERT INTO modulestt (MODULEID,DESCRIPTION,LECTURE_DATE,ROOM,MODULE_LEADER,TUTOR1,ASSESSMENT1DESC,ASS1DEADLINE,ASS2DESC,ASS2DEADLINE) VALUES ('4CC511','PROGRAMMING II','TUE 18-19','MS038','Wayne Rippin','Andy','Porject Hand-in','Oct18 23.59','Quiz','Dec12 12.00');  
-- create a table to hold all of the tutorials
CREATE TABLE TUTORIALS (
TUTORIAL_CODE VARCHAR(40)PRIMARY KEY,
MODULEID VARCHAR(20)
);
-- INSERTS ALL OF THE TUTORIAL SESSIONS INTO THEIR TABLE FOR LATER REFERENCE 
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('FRI 9-10 MS316','5CC507');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('MON 11-13 MS214','6CC529');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('WED 11-12 MS214','5CC516');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('TUE 9-17 MS304','4CC510');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('MON 9-10 MS304','4CC511');

INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('FRI 10-11 MS316','5CC507');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('THU 11-12 MS038','5CC516');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('TUE 9-17 MS304a','4CC510');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('MON 11-12 MS304','4CC511');

INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('FRI 14-15 MS316','5CC507');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('MON 13-14 MS213','4CC511');

INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('FRI 15-16 MS316','5CC507');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('TUE 10-11 MS304a','4CC511');

INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('FRI 16-17 MS316','5CC507');
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('TUE 11-12 MS212','4CC511');
-- INSERT THE 6TH TUTORIAL
INSERT INTO TUTORIALS (TUTORIAL_CODE,MODULEID) VALUES ('THU 13-14 MS214','4CC511');

--THIS IS THE CUSTOM ENTRY TABLE FOR STUDENTS TO USE, USING THEIR ID AS A FOREIGN KEY.
CREATE TABLE studentschedules (
EVENTID SERIAL PRIMARY KEY,
STUDENTID CHAR(9) NOT NULL REFERENCES students (STUDENTID),
EVENT VARCHAR(80) NOT NULL,
APPOINTMENT_TIME VARCHAR(25) NOT NULL,
APPOINTMENT_DATE VARCHAR(15) NOT NULL
);

INSERT INTO studentschedules(STUDENTID,EVENT,APPOINTMENT_TIME,APPOINTMENT_DATE) VALUES (328145291,'Pub - Standing Order','19.00-23.59','Oct-23');
INSERT INTO studentschedules(STUDENTID,EVENT,APPOINTMENT_TIME,APPOINTMENT_DATE) VALUES (328145291,'Sunday Lunch','13.00-15.00','Nov-29');
INSERT INTO studentschedules(STUDENTID,EVENT,APPOINTMENT_TIME,APPOINTMENT_DATE) VALUES (578274289,'Gym','12.00-13.30','Nov-13');
INSERT INTO studentschedules(STUDENTID,EVENT,APPOINTMENT_TIME,APPOINTMENT_DATE) VALUES (578274289,'Project Meeting','13.00-15.00','Nov-12');

--ENROLLMENT IS A JUNCTION ENTITY TO ELIMINATE THE M/N RELATIONSHIP BETWEEN STUDENT AND MODULES, BOTH VALUES HAVE TO BE INCLUDED AND ARE FOREIGN KEYS TO RESPECTIVE TABLE.
CREATE TABLE enrollmenttable (
ENROLLMENTID SERIAL PRIMARY KEY,
STUDENTID CHAR(9) NOT NULL REFERENCES students (STUDENTID),
MODULEID1 VARCHAR(20) REFERENCES modulestt (MODULEID),
TUTORIAL1 VARCHAR(40) REFERENCES TUTORIALS (TUTORIAL_CODE),
MODULEID2 VARCHAR(20) REFERENCES modulestt (MODULEID),
TUTORIAL2 VARCHAR(40) REFERENCES TUTORIALS (TUTORIAL_CODE),
MODULEID3 VARCHAR(20) REFERENCES modulestt (MODULEID), 
TUTORIAL3 VARCHAR(40) REFERENCES TUTORIALS (TUTORIAL_CODE),
MODULEID4 VARCHAR(20) REFERENCES modulestt (MODULEID),
TUTORIAL4 VARCHAR(40) REFERENCES TUTORIALS (TUTORIAL_CODE)
);
INSERT INTO ENROLLMENTTABLE (STUDENTID,MODULEID1,TUTORIAL1,MODULEID2,TUTORIAL2,MODULEID3,TUTORIAL3,MODULEID4,TUTORIAL4) VALUES ('328145291','5CC507','FRI 14-15 MS316','5CC516','MON 9-10 MS304','5CC516','THU 11-12 MS038','4CC510','TUE 9-17 MS304');
INSERT INTO ENROLLMENTTABLE (STUDENTID,MODULEID1,TUTORIAL1,MODULEID2,TUTORIAL2) VALUES ('578274289','6CC529','MON 11-13 MS214','5CC516','THU 11-12 MS038');




































